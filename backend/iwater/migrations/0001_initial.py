# Generated by Django 4.0.6 on 2022-08-19 09:51

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import iwater.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=50, verbose_name='company_name')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='address')),
                ('gst_no', models.CharField(blank=True, max_length=20, verbose_name='gstno')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('status', models.BooleanField(default=True)),
                ('alerts', models.SmallIntegerField(default=0)),
                ('created', models.DateField(auto_now_add=True)),
                ('is_treatment_unit', models.BooleanField(default=False, verbose_name='Is treatment')),
                ('is_dispensing_unit', models.BooleanField(default=False, verbose_name='Is dispensing')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_treatment_unit', models.BooleanField(default=False, verbose_name='Is treatment')),
                ('is_dispensing_unit', models.BooleanField(default=False, verbose_name='Is dispensing')),
                ('created', models.DateField(auto_now_add=True)),
                ('valid_till', models.DateField(default=iwater.models.get_deadline)),
                ('days_to_expire', models.SmallIntegerField(default=30)),
                ('no_of_sites', models.SmallIntegerField(default=0)),
                ('assigned_sites', models.SmallIntegerField(default=0)),
                ('unassigned_sites', models.SmallIntegerField(default=0)),
                ('last_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('data_transfer_volume', models.BigIntegerField(default=0)),
                ('no_of_actions', models.BigIntegerField(default=0)),
                ('subscription_code', models.BigIntegerField(null=True)),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site_id', to='iwater.site', verbose_name='site_id')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name1', models.CharField(max_length=255, null=True, unique=True)),
                ('serial_no1', models.CharField(max_length=255, null=True, unique=True)),
                ('device_name2', models.CharField(max_length=255, null=True, unique=True)),
                ('serial_no2', models.CharField(max_length=255, null=True, unique=True)),
                ('device_name3', models.CharField(max_length=255, null=True, unique=True)),
                ('serial_no3', models.CharField(max_length=255, null=True, unique=True)),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site', to='iwater.site', verbose_name='site')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='phone')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('avatar', models.ImageField(null=True, upload_to='images/')),
                ('site_limit', models.SmallIntegerField(default=0)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_supervisor', models.BooleanField(default=False, verbose_name='Is supervisor')),
                ('is_operator', models.BooleanField(default=False, verbose_name='Is operator')),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id', to='iwater.company', verbose_name='company_id')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SitePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteid', to='iwater.site', verbose_name='siteid')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userid', to=settings.AUTH_USER_MODEL, verbose_name='userid')),
            ],
            options={
                'db_table': 'iwater_site_permissions',
                'unique_together': {('user', 'site')},
            },
        ),
    ]
